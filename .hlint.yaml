---
- functions:
  - {name: fromJust, within: []}
  - {name: foldl, within: []}

- ignore: {name: Use camelCase, within: [Data.GMP]}

- error: {lhs: "convertBool . f . fromIntegral", rhs: "asTest f", name: "Use asTest"}
- error: {lhs: "fromIntegral . f . fromIntegral", rhs: "conjugate f", name: "Use conjugate"}
- error: {lhs: "hylo embed", rhs: "ana", name: "Use anamorphism"}
- error: {lhs: "hylo f project", rhs: "cata f", name: "Use catamorphism"}
- error: {lhs: "f >> pure ()", rhs: "void f", name: "Use void"}
- error: {lhs: "gmpToInteger <=< (peek . f . fromIntegral)", rhs: "conjugateGMP f", name: "Use conjugateGMP"}
- error: {lhs: "fromIntegral (f (fromIntegral i) (fromIntegral j))", rhs: "conjugateTwo f", name: "Use conjugateTwo"}
